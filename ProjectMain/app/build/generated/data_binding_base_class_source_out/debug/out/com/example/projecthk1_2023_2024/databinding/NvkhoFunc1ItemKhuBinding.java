// Generated by view binder compiler. Do not edit!
package com.example.projecthk1_2023_2024.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projecthk1_2023_2024.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NvkhoFunc1ItemKhuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView nameKhu;

  @NonNull
  public final Button selectKe1;

  @NonNull
  public final Button selectKe2;

  @NonNull
  public final Button selectKe3;

  @NonNull
  public final Button selectKe4;

  @NonNull
  public final Button selectKe5;

  @NonNull
  public final Button selectKe6;

  private NvkhoFunc1ItemKhuBinding(@NonNull ConstraintLayout rootView, @NonNull TextView nameKhu,
      @NonNull Button selectKe1, @NonNull Button selectKe2, @NonNull Button selectKe3,
      @NonNull Button selectKe4, @NonNull Button selectKe5, @NonNull Button selectKe6) {
    this.rootView = rootView;
    this.nameKhu = nameKhu;
    this.selectKe1 = selectKe1;
    this.selectKe2 = selectKe2;
    this.selectKe3 = selectKe3;
    this.selectKe4 = selectKe4;
    this.selectKe5 = selectKe5;
    this.selectKe6 = selectKe6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NvkhoFunc1ItemKhuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NvkhoFunc1ItemKhuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nvkho_func1_item_khu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NvkhoFunc1ItemKhuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nameKhu;
      TextView nameKhu = ViewBindings.findChildViewById(rootView, id);
      if (nameKhu == null) {
        break missingId;
      }

      id = R.id.selectKe1;
      Button selectKe1 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe1 == null) {
        break missingId;
      }

      id = R.id.selectKe2;
      Button selectKe2 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe2 == null) {
        break missingId;
      }

      id = R.id.selectKe3;
      Button selectKe3 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe3 == null) {
        break missingId;
      }

      id = R.id.selectKe4;
      Button selectKe4 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe4 == null) {
        break missingId;
      }

      id = R.id.selectKe5;
      Button selectKe5 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe5 == null) {
        break missingId;
      }

      id = R.id.selectKe6;
      Button selectKe6 = ViewBindings.findChildViewById(rootView, id);
      if (selectKe6 == null) {
        break missingId;
      }

      return new NvkhoFunc1ItemKhuBinding((ConstraintLayout) rootView, nameKhu, selectKe1,
          selectKe2, selectKe3, selectKe4, selectKe5, selectKe6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
