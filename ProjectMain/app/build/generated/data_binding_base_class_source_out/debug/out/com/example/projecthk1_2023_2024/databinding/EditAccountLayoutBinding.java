// Generated by view binder compiler. Do not edit!
package com.example.projecthk1_2023_2024.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projecthk1_2023_2024.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditAccountLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Pos;

  @NonNull
  public final ImageView avt;

  @NonNull
  public final ImageView backAcount;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final ConstraintLayout consAvtEdit;

  @NonNull
  public final LinearLayout consBackground;

  @NonNull
  public final ConstraintLayout consInfAcount;

  @NonNull
  public final ConstraintLayout consText;

  @NonNull
  public final EditText edtBir;

  @NonNull
  public final EditText edtEmail;

  @NonNull
  public final EditText edtName;

  @NonNull
  public final EditText edtPhone;

  @NonNull
  public final EditText edtSex;

  @NonNull
  public final ConstraintLayout inf;

  @NonNull
  public final TextView textBir;

  @NonNull
  public final TextView textEmail;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textPhone;

  @NonNull
  public final TextView textPos;

  @NonNull
  public final TextView textSex;

  @NonNull
  public final TextView textView3;

  private EditAccountLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Pos,
      @NonNull ImageView avt, @NonNull ImageView backAcount, @NonNull Button btnSave,
      @NonNull ConstraintLayout consAvtEdit, @NonNull LinearLayout consBackground,
      @NonNull ConstraintLayout consInfAcount, @NonNull ConstraintLayout consText,
      @NonNull EditText edtBir, @NonNull EditText edtEmail, @NonNull EditText edtName,
      @NonNull EditText edtPhone, @NonNull EditText edtSex, @NonNull ConstraintLayout inf,
      @NonNull TextView textBir, @NonNull TextView textEmail, @NonNull TextView textName,
      @NonNull TextView textPhone, @NonNull TextView textPos, @NonNull TextView textSex,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.Pos = Pos;
    this.avt = avt;
    this.backAcount = backAcount;
    this.btnSave = btnSave;
    this.consAvtEdit = consAvtEdit;
    this.consBackground = consBackground;
    this.consInfAcount = consInfAcount;
    this.consText = consText;
    this.edtBir = edtBir;
    this.edtEmail = edtEmail;
    this.edtName = edtName;
    this.edtPhone = edtPhone;
    this.edtSex = edtSex;
    this.inf = inf;
    this.textBir = textBir;
    this.textEmail = textEmail;
    this.textName = textName;
    this.textPhone = textPhone;
    this.textPos = textPos;
    this.textSex = textSex;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditAccountLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditAccountLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_account_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditAccountLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Pos;
      TextView Pos = ViewBindings.findChildViewById(rootView, id);
      if (Pos == null) {
        break missingId;
      }

      id = R.id.avt;
      ImageView avt = ViewBindings.findChildViewById(rootView, id);
      if (avt == null) {
        break missingId;
      }

      id = R.id.back_acount;
      ImageView backAcount = ViewBindings.findChildViewById(rootView, id);
      if (backAcount == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.consAvt_Edit;
      ConstraintLayout consAvtEdit = ViewBindings.findChildViewById(rootView, id);
      if (consAvtEdit == null) {
        break missingId;
      }

      id = R.id.consBackground;
      LinearLayout consBackground = ViewBindings.findChildViewById(rootView, id);
      if (consBackground == null) {
        break missingId;
      }

      id = R.id.consInfAcount;
      ConstraintLayout consInfAcount = ViewBindings.findChildViewById(rootView, id);
      if (consInfAcount == null) {
        break missingId;
      }

      id = R.id.consText;
      ConstraintLayout consText = ViewBindings.findChildViewById(rootView, id);
      if (consText == null) {
        break missingId;
      }

      id = R.id.edtBir;
      EditText edtBir = ViewBindings.findChildViewById(rootView, id);
      if (edtBir == null) {
        break missingId;
      }

      id = R.id.edtEmail;
      EditText edtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edt_Name;
      EditText edtName = ViewBindings.findChildViewById(rootView, id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edtPhone;
      EditText edtPhone = ViewBindings.findChildViewById(rootView, id);
      if (edtPhone == null) {
        break missingId;
      }

      id = R.id.edtSex;
      EditText edtSex = ViewBindings.findChildViewById(rootView, id);
      if (edtSex == null) {
        break missingId;
      }

      id = R.id.inf;
      ConstraintLayout inf = ViewBindings.findChildViewById(rootView, id);
      if (inf == null) {
        break missingId;
      }

      id = R.id.textBir;
      TextView textBir = ViewBindings.findChildViewById(rootView, id);
      if (textBir == null) {
        break missingId;
      }

      id = R.id.textEmail;
      TextView textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.textPhone;
      TextView textPhone = ViewBindings.findChildViewById(rootView, id);
      if (textPhone == null) {
        break missingId;
      }

      id = R.id.textPos;
      TextView textPos = ViewBindings.findChildViewById(rootView, id);
      if (textPos == null) {
        break missingId;
      }

      id = R.id.textSex;
      TextView textSex = ViewBindings.findChildViewById(rootView, id);
      if (textSex == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new EditAccountLayoutBinding((ConstraintLayout) rootView, Pos, avt, backAcount,
          btnSave, consAvtEdit, consBackground, consInfAcount, consText, edtBir, edtEmail, edtName,
          edtPhone, edtSex, inf, textBir, textEmail, textName, textPhone, textPos, textSex,
          textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
