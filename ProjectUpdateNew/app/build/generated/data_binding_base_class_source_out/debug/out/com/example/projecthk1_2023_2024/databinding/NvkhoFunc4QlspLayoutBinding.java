// Generated by view binder compiler. Do not edit!
package com.example.projecthk1_2023_2024.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projecthk1_2023_2024.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NvkhoFunc4QlspLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backHome;

  @NonNull
  public final ConstraintLayout consInfPNhap;

  @NonNull
  public final ConstraintLayout consText;

  @NonNull
  public final RecyclerView dspxMoi;

  @NonNull
  public final TextView funcSearch;

  @NonNull
  public final ImageView icSearch;

  @NonNull
  public final ImageView seach;

  @NonNull
  public final TextView textNhap;

  @NonNull
  public final TextView textSp;

  private NvkhoFunc4QlspLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backHome, @NonNull ConstraintLayout consInfPNhap,
      @NonNull ConstraintLayout consText, @NonNull RecyclerView dspxMoi,
      @NonNull TextView funcSearch, @NonNull ImageView icSearch, @NonNull ImageView seach,
      @NonNull TextView textNhap, @NonNull TextView textSp) {
    this.rootView = rootView;
    this.backHome = backHome;
    this.consInfPNhap = consInfPNhap;
    this.consText = consText;
    this.dspxMoi = dspxMoi;
    this.funcSearch = funcSearch;
    this.icSearch = icSearch;
    this.seach = seach;
    this.textNhap = textNhap;
    this.textSp = textSp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NvkhoFunc4QlspLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NvkhoFunc4QlspLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nvkho_func4_qlsp_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NvkhoFunc4QlspLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_home;
      ImageView backHome = ViewBindings.findChildViewById(rootView, id);
      if (backHome == null) {
        break missingId;
      }

      id = R.id.consInfPNhap;
      ConstraintLayout consInfPNhap = ViewBindings.findChildViewById(rootView, id);
      if (consInfPNhap == null) {
        break missingId;
      }

      id = R.id.consText;
      ConstraintLayout consText = ViewBindings.findChildViewById(rootView, id);
      if (consText == null) {
        break missingId;
      }

      id = R.id.dspxMoi;
      RecyclerView dspxMoi = ViewBindings.findChildViewById(rootView, id);
      if (dspxMoi == null) {
        break missingId;
      }

      id = R.id.func_search;
      TextView funcSearch = ViewBindings.findChildViewById(rootView, id);
      if (funcSearch == null) {
        break missingId;
      }

      id = R.id.ic_search;
      ImageView icSearch = ViewBindings.findChildViewById(rootView, id);
      if (icSearch == null) {
        break missingId;
      }

      id = R.id.seach;
      ImageView seach = ViewBindings.findChildViewById(rootView, id);
      if (seach == null) {
        break missingId;
      }

      id = R.id.textNhap;
      TextView textNhap = ViewBindings.findChildViewById(rootView, id);
      if (textNhap == null) {
        break missingId;
      }

      id = R.id.text_sp;
      TextView textSp = ViewBindings.findChildViewById(rootView, id);
      if (textSp == null) {
        break missingId;
      }

      return new NvkhoFunc4QlspLayoutBinding((ConstraintLayout) rootView, backHome, consInfPNhap,
          consText, dspxMoi, funcSearch, icSearch, seach, textNhap, textSp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
