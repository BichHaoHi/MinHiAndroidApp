// Generated by view binder compiler. Do not edit!
package com.example.projecthk1_2023_2024.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projecthk1_2023_2024.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccountLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView avt;

  @NonNull
  public final ImageView backHomeA;

  @NonNull
  public final TextView bir;

  @NonNull
  public final ConstraintLayout consAvtEdit;

  @NonNull
  public final LinearLayout consBackground;

  @NonNull
  public final ConstraintLayout consInfAcount;

  @NonNull
  public final ConstraintLayout consText;

  @NonNull
  public final ImageView editAcount;

  @NonNull
  public final TextView email;

  @NonNull
  public final ConstraintLayout inf;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView phone;

  @NonNull
  public final TextView pos;

  @NonNull
  public final TextView sex;

  @NonNull
  public final TextView textBir;

  @NonNull
  public final TextView textEmail;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textPhone;

  @NonNull
  public final TextView textPos;

  @NonNull
  public final TextView textSex;

  @NonNull
  public final TextView textView3;

  private AccountLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView avt,
      @NonNull ImageView backHomeA, @NonNull TextView bir, @NonNull ConstraintLayout consAvtEdit,
      @NonNull LinearLayout consBackground, @NonNull ConstraintLayout consInfAcount,
      @NonNull ConstraintLayout consText, @NonNull ImageView editAcount, @NonNull TextView email,
      @NonNull ConstraintLayout inf, @NonNull TextView name, @NonNull TextView phone,
      @NonNull TextView pos, @NonNull TextView sex, @NonNull TextView textBir,
      @NonNull TextView textEmail, @NonNull TextView textName, @NonNull TextView textPhone,
      @NonNull TextView textPos, @NonNull TextView textSex, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.avt = avt;
    this.backHomeA = backHomeA;
    this.bir = bir;
    this.consAvtEdit = consAvtEdit;
    this.consBackground = consBackground;
    this.consInfAcount = consInfAcount;
    this.consText = consText;
    this.editAcount = editAcount;
    this.email = email;
    this.inf = inf;
    this.name = name;
    this.phone = phone;
    this.pos = pos;
    this.sex = sex;
    this.textBir = textBir;
    this.textEmail = textEmail;
    this.textName = textName;
    this.textPhone = textPhone;
    this.textPos = textPos;
    this.textSex = textSex;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccountLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccountLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.account_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccountLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avt;
      ImageView avt = ViewBindings.findChildViewById(rootView, id);
      if (avt == null) {
        break missingId;
      }

      id = R.id.back_homeA;
      ImageView backHomeA = ViewBindings.findChildViewById(rootView, id);
      if (backHomeA == null) {
        break missingId;
      }

      id = R.id.bir;
      TextView bir = ViewBindings.findChildViewById(rootView, id);
      if (bir == null) {
        break missingId;
      }

      id = R.id.consAvt_Edit;
      ConstraintLayout consAvtEdit = ViewBindings.findChildViewById(rootView, id);
      if (consAvtEdit == null) {
        break missingId;
      }

      id = R.id.consBackground;
      LinearLayout consBackground = ViewBindings.findChildViewById(rootView, id);
      if (consBackground == null) {
        break missingId;
      }

      id = R.id.consInfAcount;
      ConstraintLayout consInfAcount = ViewBindings.findChildViewById(rootView, id);
      if (consInfAcount == null) {
        break missingId;
      }

      id = R.id.consText;
      ConstraintLayout consText = ViewBindings.findChildViewById(rootView, id);
      if (consText == null) {
        break missingId;
      }

      id = R.id.edit_acount;
      ImageView editAcount = ViewBindings.findChildViewById(rootView, id);
      if (editAcount == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.inf;
      ConstraintLayout inf = ViewBindings.findChildViewById(rootView, id);
      if (inf == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.phone;
      TextView phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.pos;
      TextView pos = ViewBindings.findChildViewById(rootView, id);
      if (pos == null) {
        break missingId;
      }

      id = R.id.sex;
      TextView sex = ViewBindings.findChildViewById(rootView, id);
      if (sex == null) {
        break missingId;
      }

      id = R.id.textBir;
      TextView textBir = ViewBindings.findChildViewById(rootView, id);
      if (textBir == null) {
        break missingId;
      }

      id = R.id.textEmail;
      TextView textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.textPhone;
      TextView textPhone = ViewBindings.findChildViewById(rootView, id);
      if (textPhone == null) {
        break missingId;
      }

      id = R.id.textPos;
      TextView textPos = ViewBindings.findChildViewById(rootView, id);
      if (textPos == null) {
        break missingId;
      }

      id = R.id.textSex;
      TextView textSex = ViewBindings.findChildViewById(rootView, id);
      if (textSex == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new AccountLayoutBinding((ConstraintLayout) rootView, avt, backHomeA, bir, consAvtEdit,
          consBackground, consInfAcount, consText, editAcount, email, inf, name, phone, pos, sex,
          textBir, textEmail, textName, textPhone, textPos, textSex, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
